#!/bin/bash

DropPod="/usr/local/DropPod"

command=$1
shift

export SSL_CERT_FILE=/usr/local/share/ca-bundle.crt

case "$command" in
  pod | pods )
    cat <(echo "include baseline::types") <(for pod; do /usr/bin/ruby -r open-uri -e "puts open('$pod').read"; done) | ${DropPod}/binstubs/puppet apply
    ;;
  test )
    cat <(echo "include baseline::types") <(for pod; do /usr/bin/ruby -r open-uri -e "puts open('$pod').read"; done) | ${DropPod}/binstubs/puppet apply --noop 2>&1 | grep '(noop)' -qc
    [[ $? -ne 0 ]]
    exit $?
    ;;
  module )
    modules="$(ls $DropPod/modules)"
    ${DropPod}/binstubs/puppet module install "$@" || exit 1
    installed=`echo "$modules" | comm -13 - <(ls /usr/local/DropPod/modules/) | uniq`

    pre=""
    post=""
    for mod in $installed; do
      if (${DropPod}/binstubs/puppet apply --noop -e "include ${mod}::sudo::pre" &>/dev/null); then
        pre="${pre} ${mod}"
      fi
      if (${DropPod}/binstubs/puppet apply --noop -e "include ${mod}::sudo::post" &>/dev/null); then
        post="${post} ${mod}"
      fi
    done

    for mod in $installed; do
      ([[ -n "$pre" ]] || [[ -n "$post" ]]) && sudo -v
      (
        if (echo "$pre" | grep "$mod") &>/dev/null; then
          sudo ${DropPod}/binstubs/puppet apply -e "include ${mod}::sudo::pre" &
          pid=$!
          while ps -p $pid &>/dev/null; do sleep 1; sudo -v; done
          wait %%
        fi
      ) &&
      (
        ${DropPod}/binstubs/puppet apply --noop -e "include ${mod}" &>/dev/null &&
        (
          ${DropPod}/binstubs/puppet apply -e "include ${mod}" &
          if ([[ -n "$pre" ]] || [[ -n "$post" ]]); then
            pid=$!
            while ps -p $pid &>/dev/null; do sleep 1; sudo -v; done
          fi
          wait %%
        )
      ) &&
      (
        if (echo "$post" | grep "$mod") &>/dev/null; then
          sudo ${DropPod}/binstubs/puppet apply -e "include ${mod}::sudo::post"
        fi
      )
    done
    ;;
  * )
    echo "Unrecognized command '${command}'"
    exit 1
esac
